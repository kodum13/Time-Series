library(astsa)
library(tseries)
library(forecast)

plot.ts(so2,main="SO2 Time Series")
par(mfrow=c(1,2))
adf.test(so2)

diff_so2 <- diff(so2)
plot.ts(diff_so2, main="Differenced SO2 Time Series")
adf.test(diff_so2)
acf(diff_so2,main="Diff. SO2 ACF")
pacf(diff_so2, main="Diff. SO2 Partial ACF")

# Fit to ar=0 d=1 ma=1 model
so2_fit <- sarima(so2,0,1,1, no.constant=TRUE)
summary(so2_fit)
so2_fit$AIC
so2_fit$BIC

arima(so2, order=c(0,1,1))

# Fit to ar=1 d=1 ma=1 model
so2_fit_ar <- sarima(so2,1,1,1, no.constant=TRUE)
summary(so2_fit_ar)
so2_fit_ar$AIC
so2_fit_ar$BIC

arima(so2, order=c(1,1,1))

par(mfrow=c(1,1))
# Predict ahead 4 time periods
sarima.for(so2,4,0,1,1)

# 3.35

library(astsa)
library(tseries)
library(forecast)

# Plots for the original time series Sales
plot.ts(sales, main="Sales Time Series")

adf.test(sales)

# Plots for the first differenced time series Sales
diff_sales = diff(sales)
plot.ts(diff_sales, main="Diff. Sales Time Series")

adf.test(diff_sales)

# Plots for the second differenced time series Sales
diff_2_sales = diff(diff(sales))
plot.ts(diff_2_sales, main="Second Diff. Sales Time Series")
acf(diff_2_sales, main="Second diff. ACF")
pacf(diff_2_sales, main="Second diff. PACF")

adf.test(diff_2_sales)

auto.arima(sales)
# Test model (1,1,1) and model (0,1,1)
model_1 <- sarima(sales,1,1,1)
model_2 <- sarima(sales,0,1,1, details=FALSE)
model_3 <- sarima(sales,1,2,1, details=FALSE)
model_4 <- sarima(sales,0,2,1, details=FALSE)

# Lead
diff_lead = diff(lead)

# CCF and lag plots 
ccf(diff_sales,diff_lead,lag.max=10, main="Diff. Sales and Diff. Lead CCF")
lag2.plot(diff_lead,diff_sales, max.lag=5)

# Regression model
lead_3 <- diff(lead,lag=3)
reg <-ts.intersect(diff_sales,lead_3,dframe=TRUE)
summary(fit<-lm(diff_sales~lead_3,data=reg,na.action=NULL))

resid <- fit$residuals

# 3.41

plot.ts(unemp, main="Unemployment Data Time Series")
acf2(unemp)
adf.test(unemp)

# Difference order 1
par(mfrow=c(1,1))
diff_unemp = diff(unemp)
plot(diff_unemp, main="Diff. Unemployment Time Series")
adf.test(diff_unemp)
acf2(diff_unemp)

# Seasonal difference at 12
par(mfrow=c(1,1))
s_diff <- diff(diff_unemp,12)
plot(s_diff, main="Seasonal Diff. Unemployment Time Series")
acf2(s_diff)

# Compare models, lowest AIC and BIC
s1 <- sarima(unemp,4,1,0,0,1,1,12)
s2 <- sarima(unemp,2,1,0,0,1,1,12)
s3 <- sarima(unemp,2,1,2,0,1,1,12)
s4 <- sarima(unemp,1,1,1,0,1,1,12)

#Predict 12 months ahead
sarima.for(unemp,12,2,1,0,0,1,1,12)

# 4.2

x1 = 2*cos(2*pi*1:128*6/100) + 3*sin(2*pi*1:128*6/100)
x2 = 4*cos(2*pi*1:128*10/100) + 5*sin(2*pi*1:128*10/100)
x3 = 6*cos(2*pi*1:128*40/100) + 7*sin(2*pi*1:128*40/100)
x=x1+x2+x3

y1 = 2*cos(2*pi*1:100*6/100) + 3*sin(2*pi*1:100*6/100)
y2 = 4*cos(2*pi*1:100*10/100) + 5*sin(2*pi*1:100*10/100)
y3 = 6*cos(2*pi*1:100*40/100) + 7*sin(2*pi*1:100*40/100)
y=y1+y2+y3

par(mfrow=c(2,2))
plot.ts(x1, ylim=c(-10,10), main=expression(omega==6/100~~~A^2==13))
plot.ts(x2, ylim=c(-10,10), main=expression(omega==10/100~~~A^2==41))
plot.ts(x3, ylim=c(-10,10), main=expression(omega==40/100~~~A^2==85))
plot.ts(x, ylim=c(-16,16),main="sum")

plot.ts(y1, ylim=c(-10,10), main=expression(omega==6/100~~~A^2==13))
plot.ts(y2, ylim=c(-10,10), main=expression(omega==10/100~~~A^2==41))
plot.ts(y3, ylim=c(-10,10), main=expression(omega==40/100~~~A^2==85))
plot.ts(y, ylim=c(-16,16),main="sum")

# 4.9

library(astsa)

par(mfrow=c(1,1))
plot.ts(sunspotz, main="Sunspotz Time Series")
# Periodogram options (raw to smooth)
par(mfrow=c(2,2))
spec_pgram_raw <- spec.pgram(sunspotz,taper=0,log="no")
spec_pgram_taper_1 <- spec.pgram(sunspotz,taper=.1,log="no", main="Taper .1 Periodogram")
spec_pgram_taper_5 <- spec.pgram(sunspotz,taper=.5,log="no", main="Taper .5 Periodogram")
spec_pgram_daniell_1 <- spec.pgram(sunspotz,taper=.25,log="no", kernel("daniell",1), main="Daniell Kernel 1")
spec_pgram_daniell_10 <- spec.pgram(sunspotz,taper=.25,log="no", kernel("daniell",10), main="Daniell Kernel 10")
spec_pgram_final <- spec.pgram(sunspotz,taper=.4,log="no", kernel("daniell",2), main="Daniell Kernel 2, Taper .4")

# Get top 5 highest spectrum frequency peaks
sort<- sort(spec_pgram_final$spec, decreasing=TRUE)[c(1:5)]
sort

# Find frequency at top 3 peaks
freq_peak1<- spec_pgram_final$freq[spec_pgram_final$spec==sort[1]];
freq_peak1
freq_peak2<- spec_pgram_final$freq[spec_pgram_final$spec==sort[2]];
freq_peak2
freq_peak3<- spec_pgram_final$freq[spec_pgram_final$spec==sort[3]];
freq_peak3

# Find the cycles for top 3 
cycle1 <- 1/freq_peak1
cycle2 <- 1/freq_peak2
cycle3 <- 1/freq_peak3
# Print Cycle lengths
cycle1; cycle2; cycle3;

# Get the confidence intervals for top 3
U = qchisq(0.025,2)
L = qchisq(.975,2)

ci_peak1 <- c(2*sort[1]/L,2*sort[1]/U)
ci_peak2 <- c(2*sort[2]/L,2*sort[2]/U)
ci_peak3 <- c(2*sort[3]/L,2*sort[3]/U)
# Print confidence intervals
ci_peak1;ci_peak2;ci_peak3

